rootfolder = fullfile('C:\Users\hp\Desktop', '101_ObjectCategories');
categories = {'chair', 'cup', 'wheelchair'};
imds = imageDatastore(fullfile(rootfolder, categories), 'LabelSource', 'foldernames');
tb1 = countEachLabel(imds);
minSetCount = min(tb1{:, 2});
imds = splitEachLabel(imds, minSetCount, 'randomize');
net = resnet101();
% figure; plot(net); title('First section of ResNet-50'); set(gca, 'YLim', [150 170]);
[trainingSet, testSet] = splitEachLabel(imds, 0.3, 'randomize');
imageSize = net.Layers(1).InputSize;
augmentedTrainingSet = augmentedImageDatastore(imageSize, trainingSet, 'ColorPreprocessing', 'gray2rgb');
augmentedTestSet = augmentedImageDatastore(imageSize, testSet, 'ColorPreprocessing', 'gray2rgb');
w1 = net.Layers(2).Weights;
w1 = mat2gray(w1);
w1 = imresize(w1, 5);
figure; montage(w1); title('First convolutional layer weights');
featureLayer = 'fc1000';
trainingFeatures = activations(net, augmentedTrainingSet, featureLayer, 'MiniBatchSize', 32, 'OutputAs', 'Columns');
trainingLabels = trainingSet.Labels;
classifier = fitcecoc(trainingFeatures, trainingLabels, 'Learners', 'Linear', 'Coding', 'onevsall', 'ObservationsIn', 'columns');
testFeatures = activations(net, augmentedTestSet, featureLayer, 'MiniBatchSize', 32, 'OutputAs', 'columns');
predictedLabels = predict(classifier, testFeatures, 'ObservationsIn', 'columns');
testLabels = testSet.Labels;
confMat = confusionmat(testLabels, predictedLabels);
confMat = bsxfun(@rdivide, confMat, sum(confMat, 2));
newImage = imread(fullfile(rootfolder, 'chair', 'image_0045.jpg'));
ds = augmentedImageDatastore(imageSize, newImage, 'ColorPreprocessing', 'gray2rgb');
imageFeatures = activations(net, ds, featureLayer, 'OutputAs', 'columns');
[label, score] = predict(classifier, imageFeatures, 'ObservationsIn', 'columns')